<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="FlightBookingTest" duration-ms="32864" started-at="2020-04-18T12:31:25Z" finished-at="2020-04-18T12:31:58Z">
    <groups>
    </groups>
    <test name="FlightBooking" duration-ms="32864" started-at="2020-04-18T12:31:25Z" finished-at="2020-04-18T12:31:58Z">
      <class name="com.nt.test.FlightBookingTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String)[pri:0, instance:com.nt.test.FlightBookingTest@11a9e7c8]" name="beforeTest" is-config="true" duration-ms="3195" started-at="2020-04-18T18:01:21Z" finished-at="2020-04-18T18:01:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Prod]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="bookFlight(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.nt.test.FlightBookingTest@11a9e7c8]" name="bookFlight" duration-ms="18501" started-at="2020-04-18T18:01:25Z" data-provider="dataProviderData" finished-at="2020-04-18T18:01:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Frankfurt]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[New York]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[21.0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Blue Skies Airlines]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookFlight -->
        <test-method status="PASS" signature="bookFlight(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.nt.test.FlightBookingTest@11a9e7c8]" name="bookFlight" duration-ms="13125" started-at="2020-04-18T18:01:44Z" data-provider="dataProviderData" finished-at="2020-04-18T18:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New York]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[12.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Frankfurt]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[June]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[23.0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Blue Skies Airlines]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookFlight -->
        <test-method status="FAIL" signature="enterPassengerData(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:4, instance:com.nt.test.FlightBookingTest@11a9e7c8]" name="enterPassengerData" duration-ms="32" started-at="2020-04-18T18:01:57Z" data-provider="dataProviderData" depends-on-methods="com.nt.test.FlightBookingTest.bookFlight" finished-at="2020-04-18T18:01:57Z">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: enterPassengerData([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String)Silk Board,(java.lang.String)Bangalore,(java.lang.String)KA,(java.lang.String)560068.0,(java.lang.String)INDIA]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: enterPassengerData([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String)Silk Board,(java.lang.String)Bangalore,(java.lang.String)KA,(java.lang.String)560068.0,(java.lang.String)INDIA]
	at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:49)
	at org.testng.internal.Invoker.injectParameters(Invoker.java:1293)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1187)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPassengerData -->
        <test-method status="SKIP" signature="billingAddress(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.nt.test.FlightBookingTest@11a9e7c8]" name="billingAddress" duration-ms="0" started-at="2020-04-18T18:01:58Z" data-provider="dataProviderData" depends-on-methods="com.nt.test.FlightBookingTest.enterPassengerData" finished-at="2020-04-18T18:01:58Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method FlightBookingTest.billingAddress(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.nt.test.FlightBookingTest@11a9e7c8] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method FlightBookingTest.billingAddress(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:5, instance:com.nt.test.FlightBookingTest@11a9e7c8] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- billingAddress -->
        <test-method status="SKIP" signature="deliveryAddress(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:6, instance:com.nt.test.FlightBookingTest@11a9e7c8]" name="deliveryAddress" duration-ms="0" started-at="2020-04-18T18:01:58Z" data-provider="dataProviderData" depends-on-methods="com.nt.test.FlightBookingTest.billingAddress" finished-at="2020-04-18T18:01:58Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method FlightBookingTest.deliveryAddress(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:6, instance:com.nt.test.FlightBookingTest@11a9e7c8] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method FlightBookingTest.deliveryAddress(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:6, instance:com.nt.test.FlightBookingTest@11a9e7c8] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deliveryAddress -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.nt.test.FlightBookingTest@11a9e7c8]" name="afterSuite" is-config="true" duration-ms="71" started-at="2020-04-18T18:02:03Z" finished-at="2020-04-18T18:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.nt.test.FlightBookingTest -->
    </test> <!-- FlightBooking -->
  </suite> <!-- FlightBookingTest -->
</testng-results>
